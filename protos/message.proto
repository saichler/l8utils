syntax = "proto3";

package types;

option java_multiple_files = true;
option java_outer_classname = "Types";
option java_package = "com.shared.types";
option go_package = "./types";

// The action the message will invoke on the handler
enum Action {
  Invalid_Action = 0;
  POST = 1;
  PUT = 2;
  PATCH = 3;
  DELETE = 4;
  GET = 5;
  Unreachable = 6;
}

// The priority of the message
enum Priority {
  P0 = 0;
  P1 = 1;
  P2 = 2;
  P3 = 3;
  P4 = 4;
  P5 = 5;
  P6 = 6;
  P7 = 7;
}

/*
  Message is to transmit a piece of data, securely, from one process to one or more processes via
  Publish/Subscribe or Reuest/Reply
 */
message Message {
  // The source uuid identifier of the message sender
  string source_uuid = 1;
  // The source uuid identifier of the message sender switch
  string source_switch_uuid = 2;
  // The destination uuid/or multicast group name of the message receiver.
  string destination = 3;
  // To uniquely identify the source message, the sender process maintain a sequence number.
  int32 sequence = 4;
  // Priority of this Message for the handler callback.
  Priority priority = 5;
  // The protobuf marshaled data, encoded to base64 string
  string data = 6;
  // The type name of the serialized data
  string type = 7;
  // Action to invoke with this data on the service point
  Action action = 8;
  // timeout when request/reply
  int64 timeout = 9;
}

// A config for the messages limitation and data size
message VNicConfig {
  // The maximum data size for a message
  uint64 max_data_size = 1;
  // The transmit message queue size
  uint64 tx_queue_size = 2;
  // The received message queue size
  uint64 rx_queue_size = 3;
  // What is the switch port for this configuration
  uint32 switch_port = 4;
  // The local uuid
  string local_uuid = 5;
  // The remote uuid
  string remote_uuid = 6;
  // The address of the connection initiator, regardless of the side.
  string address = 7;
  // force external mode in case two switches are on the same machine
  // woth different ports
  bool force_external = 8;
  // Custom local alias for this vnic
  string local_alias = 9;
  // Custom remote alias for this vnic
  string remote_alias = 10;
  // supported service topics
  map<string, bool> topics = 11;
}